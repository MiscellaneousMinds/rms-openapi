name: Validate and Generate
on:
  push:
    paths:
      - "services/**"
      - ".validaterc"
      - ".spectral.yml"
      - "**/generate.js"
      - "**/generate.yaml"

  workflow_dispatch:
    inputs: {}

env:
  GITHUB_TOKEN: ${{secrets.ACCESS_TOKEN}}

jobs:
  validateSpecs:
    name: Validate OpenAPI Specs
    runs-on: ubuntu-latest
    outputs:
      build: ${{steps.confirm-build-clients.outputs.build}}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: Install NPM
        run: npm ci
      - name: Run Validation
        run: |
          ls services/**/*.y*ml | xargs ./node_modules/.bin/lint-openapi -e
      - id: confirm-build-clients
        name: Confirm Client Build
        run: |
          git fetch --all --tags
          api_version=$(node ./version-bump.js --version)
          echo "API version is: ${api_version}"
          (git tag | grep $api_version && echo "build=no" >> $GITHUB_OUTPUT) || (echo "build=yes" >>  $GITHUB_OUTPUT)

  generateClientSource:
    name: Generate Sources
    runs-on: ubuntu-latest
    needs: validateSpecs
    env:
      OPENAPI_GENERATOR_VERSION: "7.15.0"

    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && needs.validateSpecs.outputs.build == 'yes'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "21"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: NPM Install
        run: npm ci

      - uses: actions/cache@v4
        id: codegencache
        with:
          path: codegen
          key: ${{ runner.os }}-openapi-generator-${{ env.OPENAPI_GENERATOR_VERSION }}

      - name: Download OpenAPI Generator
        if: steps.codegencache.outputs.cache-hit != 'true'
        run: |
          mkdir -p codegen
          wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/$OPENAPI_GENERATOR_VERSION/openapi-generator-cli-$OPENAPI_GENERATOR_VERSION.jar -O codegen/openapi-generator-cli.jar

      - name: Make Script
        run: |
          node ./generate.js

      - name: Run Make Script
        run: sh generate.sh

      - name: Zip Sources
        run: zip -r generated-sources.zip generated-sources/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: generated-sources.zip
          path: generated-sources.zip
  publishRustLibs:
    name: Build and Publish - Rust
    runs-on: ubuntu-latest
    needs: generateClientSource
    env:
      CLOUDSMITH_API_KEY: ${{secrets.RUST_REGISTRY_API_KEY}}

    steps:
      - name: Download Generated Source
        uses: actions/download-artifact@v3
        with:
          name: generated-sources.zip
          path: downloaded-generated-sources

      - name: Unzip Sources
        run: |
          unzip downloaded-generated-sources/generated-sources.zip


      - name: Loop and Publish Rust Packages
        run: |
          ls -l generated-sources/rust/* > /dev/null || exit 0
          for filename in generated-sources/rust/*; do sh "$filename/publish.sh"; done
  versionBumpDev:
    name: Bump Dev Version
    runs-on: ubuntu-latest
    needs:
      - publishRustLibs
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
          token: ${{secrets.ACCESS_TOKEN}}
          persist-credentials: true
          fetch-depth: 0
      - run: echo "current git ref is `git rev-parse HEAD`"
      - uses: actions/setup-node@v4
        name: Setup Node
        with:
          node-version: "21"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install NPM
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.email "BenDaMyth@gmail.com"
          git config --global user.name "AdeThorMiwa"

      - name: Tag Current
        run: |
          tag_name="v$(node ./version-bump --version)"
          echo "Version Number: $tag_name"
          git tag "$tag_name" && git push origin "$tag_name"

      # - name: Checkout Dev
      #   run: |
      #     git checkout dev

      - name: Run Version Bump
        run: |
          node ./version-bump.js --semver patch

      - name: Commit Changes
        run: |
          new_version="v$(node ./version-bump --version)"
          git add . && git commit -m "Bumped version to ${new_version}" && git push origin
